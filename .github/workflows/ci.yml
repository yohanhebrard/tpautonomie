name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.2'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 bandit
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Lint with Flake8
        run: |
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Security check with Bandit
        run: |
          bandit -r src/app.py --severity-level high
    
  build-and-push:
    needs: lint-and-security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:latest
      
      - name: Install Docker Scout (if needed)
        run: |
          # Cette étape tente d'installer Docker Scout ou utilise une méthode alternative pour l'analyse
          echo "Installation de Docker Scout ou configuration de l'environnement"
          if ! docker scout --version &>/dev/null; then
            echo "Docker Scout n'est pas disponible, on passe cette étape"
          fi
        continue-on-error: true
      
      - name: Run Docker Scout or Skip
        run: |
          # Tentative d'exécuter Docker Scout si disponible, sinon afficher un message
          if docker scout --version &>/dev/null; then
            docker scout cves ${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:latest
          else
            echo "Docker Scout n'est pas disponible. L'analyse de sécurité doit être effectuée manuellement."
            echo "Vous pouvez utiliser d'autres outils comme Trivy ou Snyk pour analyser votre image."
            echo "Image construite et publiée avec succès: ${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:latest"
          fi
        continue-on-error: true